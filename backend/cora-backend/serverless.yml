service: cora-backend

provider:
  name: aws
  runtime: nodejs22.x
  region: us-east-2
  role: arn:aws:iam::626218016489:role/LabRole
  stage: dev
  timeout: 29
  environment:
    ALLERGIES_TABLE: Allergies
    TYPE_ALLERGIES_TABLE: TypeAllergies
    TYPE_MEDS_TABLE: TypeMeds
    MEDS_TABLE: Meds
    BLOOD_TYPE_TABLE: BloodType
    RECIPE_TABLE: Recipe
    SPECIALTY_TABLE: Specialty
    PROCEDURE_TYPE_TABLE: TypeProcedure
    EXAM_TYPE_TABLE: TypeExam

plugins:
  - serverless-offline
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    number: 5

functions:
#Allergies
  initializeAllergies:
      handler: src/handlers/alergias.initializeTable
      events:
        - httpApi:
            path: /allergies/initializeAllergies
            method: GET
            cors: true

  getAllergies:
    handler: src/handlers/alergias.getAllergies
    events:
      - httpApi:
          path: /allergies/{userId}
          method: GET
          cors: true

  filterAllergies:
    handler: src/handlers/alergias.filterAllergies
    events:
      - httpApi:
          path: /allergies/{userId}/filter/{filter}
          method: GET
          cors: true

  createAllergy:
    handler: src/handlers/alergias.createAllergy
    events:
      - httpApi:
          path: /allergies
          method: POST
          cors: true

  updateAllergy:
    handler: src/handlers/alergias.updateAllergy
    events:
      - httpApi:
          path: /allergies/{userId}/allergyId/{id}
          method: PUT
          cors: true

  deleteAllergy:
    handler: src/handlers/alergias.deleteAllergy
    events:
      - httpApi:
          path: /allergies/{userId}/allergyId/{id}
          method: DELETE
          cors: true

# Type Allergy

  createTypeAllergyTable:
    handler: src/handlers/tipoAlergia.initializeTable
    events:
      - httpApi:
          path: /typeAllergies/createTable
          method: GET
          cors: true

  getAllTypesAllergies:
    handler: src/handlers/tipoAlergia.GetAllTypes
    events:
      - httpApi:
          path: /typeAllergies/getAll
          method: GET
          cors: true

  getTypesAllergiesFiltered:
    handler: src/handlers/tipoAlergia.filterAllergies
    events:
      - httpApi:
          path: /typeAllergies/filterAllergies/{filter}
          method: GET
          cors: true

  createAllergyType:
    handler: src/handlers/tipoAlergia.createAllergy
    events:
      - httpApi:
          path: /typeAllergies/create/{filter}
          method: POST
          cors: true

#MedsType
  createTypesMedsTable:
    handler: src/handlers/tipoMedicamento.initializeTable
    events:
      - httpApi:
          path: /typeMeds/createTable
          method: GET
          cors: true

  getAllMedsTypes:
    handler: src/handlers/tipoMedicamento.GetAllTypes
    events:
      - httpApi:
          path: /typeMeds/getAll
          method: GET
          cors: true

  getMedsTypesFiltered:
    handler: src/handlers/tipoMedicamento.filterMedTypes
    events:
      - httpApi:
          path: /typeMeds/filterMeds/{filter}
          method: GET
          cors: true

  createMedType:
    handler: src/handlers/tipoAlergia.createMedType
    events:
      - httpApi:
          path: /typeMeds/create/{filter}
          method: POST
          cors: true  

#Meds
  initializeMeds:
      handler: src/handlers/medicamento.initializeTable
      events:
        - httpApi:
            path: /meds/initializeMeds
            method: GET
            cors: true

  getMeds:
    handler: src/handlers/medicamento.getMed
    events:
      - httpApi:
          path: /meds/{idMedicamento}
          method: GET
          cors: true

  createMed:
    handler: src/handlers/medicamento.createMed
    events:
      - httpApi:
          path: /meds
          method: POST
          cors: true

  updateMed:
    handler: src/handlers/medicamento.updateMed
    events:
      - httpApi:
          path: /meds/{idMedicamento}
          method: PUT
          cors: true

  deleteMed:
    handler: src/handlers/medicamento.deleteMed
    events:
      - httpApi:
          path: /meds/{idMedicamento}
          method: DELETE
          cors: true

#BloodType
  initializeBloodTypes:
      handler: src/handlers/tipoSangre.initializeTable
      events:
        - httpApi:
            path: /bloodTypes/initializeBloodTypes
            method: GET
            cors: true

  getBloodTypes:
    handler: src/handlers/tipoSangre.getBloodTypes
    events:
      - httpApi:
          path: /bloodTypes
          method: GET
          cors: true

  filterBloodTypes:
    handler: src/handlers/tipoSangre.filterBloodTypes
    events:
      - httpApi:
          path: /bloodTypes/{filter}
          method: GET
          cors: true

  createBloodTypes:
    handler: src/handlers/tipoSangre.createBloodType
    events:
      - httpApi:
          path: /bloodTypes
          method: POST
          cors: true

  updateBloodTypes:
    handler: src/handlers/tipoSangre.updateBloodTypes
    events:
      - httpApi:
          path: /bloodTypes/{idBloodType}
          method: PUT
          cors: true

  deleteBloodTypes:
    handler: src/handlers/tipoSangre.deleteBloodType
    events:
      - httpApi:
          path: /bloodTypes/{idBloodType}
          method: DELETE
          cors: true

#Recipe
  initializeRecipe:
      handler: src/handlers/receta.initializeTable
      events:
        - httpApi:
            path: /recipes/initializeRecipes
            method: GET
            cors: true

  getRecipes:
    handler: src/handlers/receta.getRecipes
    events:
      - httpApi:
          path: /recipes/{userId}
          method: GET
          cors: true

  getRecipe:
    handler: src/handlers/receta.getRecipe
    events:
      - httpApi:
          path: /recipes/{userId}/recipe/{idRecipe}
          method: GET
          cors: true

  createRecipe:
    handler: src/handlers/receta.createRecipe
    events:
      - httpApi:
          path: /recipes
          method: POST
          cors: true

  updateRecipe:
    handler: src/handlers/receta.updateRecipe
    events:
      - httpApi:
          path: /recipes/{userId}/recipe/{idRecipe}
          method: PUT
          cors: true

  deleteRecipe:
    handler: src/handlers/receta.deleteRecipe
    events:
      - httpApi:
          path: /recipes/{userId}/recipe/{idRecipe}
          method: DELETE
          cors: true

#Specialties
  initializeSpecialties:
      handler: src/handlers/especialidad.initializeTable
      events:
        - httpApi:
            path: /specialties/initializeSpecialties
            method: GET
            cors: true

  getSpecialties:
    handler: src/handlers/especialidad.getSpecialties
    events:
      - httpApi:
          path: /specialties
          method: GET
          cors: true

  filterSpecialties:
    handler: src/handlers/especialidad.filterSpecialties
    events:
      - httpApi:
          path: /specialties/filter/{filter}
          method: GET
          cors: true

  createSpecialties:
    handler: src/handlers/especialidad.createSpecialty
    events:
      - httpApi:
          path: /specialties
          method: POST
          cors: true

  updateSpecialties:
    handler: src/handlers/especialidad.updateSpecialty
    events:
      - httpApi:
          path:  /specialties/{idSpecialty}
          method: PUT
          cors: true

  deleteSpecialties:
    handler: src/handlers/especialidad.deleteSpecialty
    events:
      - httpApi:
          path: /specialties/{idSpecialty}
          method: DELETE
          cors: true

#TipoProcedimiento
  initializeProcedureTypes:
      handler: src/handlers/tipoProcedimiento.initializeTable
      events:
        - httpApi:
            path: /procedureTypes/initializeSpecialties
            method: GET
            cors: true

  getProcedureType:
    handler: src/handlers/tipoProcedimiento.getProcedureTypes
    events:
      - httpApi:
          path: /procedureTypes
          method: GET
          cors: true

  filterProcedureType:
    handler: src/handlers/tipoProcedimiento.filterProcedureTypes
    events:
      - httpApi:
          path: /procedureTypes/filter/{filter}
          method: GET
          cors: true

  createProcedureType:
    handler: src/handlers/tipoProcedimiento.createProcedureType
    events:
      - httpApi:
          path: /procedureTypes
          method: POST
          cors: true

  updateProcedureType:
    handler: src/handlers/tipoProcedimiento.updateProcedureType
    events:
      - httpApi:
          path:  /procedureTypes/{idProcedureType}
          method: PUT
          cors: true

  deleteProcedureType:
    handler: src/handlers/tipoProcedimiento.deleteProcedureType
    events:
      - httpApi:
          path: /procedureTypes/{idProcedureType}
          method: DELETE
          cors: true

#TipoExamen
  initializeExamTypes:
      handler: src/handlers/tipoExamen.initializeTable
      events:
        - httpApi:
            path: /examType/initializeExamTypes
            method: GET
            cors: true

  getExamTypes:
    handler: src/handlers/tipoExamen.getExamTypes
    events:
      - httpApi:
          path: /examType
          method: GET
          cors: true

  filterExamTypes:
    handler: src/handlers/tipoExamen.filterExamTypes
    events:
      - httpApi:
          path: /examType/filter/{filter}
          method: GET
          cors: true

  createExamTypes:
    handler: src/handlers/tipoExamen.createExamType
    events:
      - httpApi:
          path: /examType
          method: POST
          cors: true

  updateExamTypes:
    handler: src/handlers/tipoExamen.updateExamTypes
    events:
      - httpApi:
          path:  /examType/{idExamType}
          method: PUT
          cors: true

  deleteExamTypes:
    handler: src/handlers/tipoExamen.deleteProcedureType
    events:
      - httpApi:
          path: /examType/{idExamType}
          method: DELETE
          cors: true

#Randomizer
  randomizeData:
    handler: src/handlers/randomizer.randomize
    events:
      - httpApi:
          path: /randomize
          method: GET
